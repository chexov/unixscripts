#!/bin/sh

[ ! "$3" ] && {
    echo "Usage: `basename $0` <lockfile> <logfile> [-l] [-t <n>] <cmd>"
    exit 13
}

setlock () {
    local lockfile=$1
    local host pid lock ret

    local myhost=`hostname -s`

    # set lock
    echo "$myhost $$" > ${lockfile}.${myhost}_$$

    # check count of locks 
    if [ `ls $lockfile.* | wc -l` -eq 1 ]; then
        # if we have one==our lock
        return 0
    fi

    rmlock $lockfile

    # clean old lock
    local locks="`ls $lockfile.$myhost* 2>/dev/null`"

    local lockdir=`dirname $lockfile`

    for lock in $locks; do
        if [ -f $lock ]; then
            read host pid < $lock

            kill -0 $pid >/dev/null 2>&1
            if [ $? -ne 0 ]; then
                rm $lock
            fi
        fi
    done

    return 1
}

rmlock () {
        local lockfile=$1

#   rm -f $lockfile
    # clean our lock
    rm -f $lockfile.`hostname -s`_$$
}

lockfile=$1; shift
logfile=$1; shift

if [ "$1" = "-l" ]; then
    warnlock="YES"
    shift
fi

if [ "$1" = "-t" ]; then
    shift
    /bin/bash -c "sleep \$((\$RANDOM/$1))"
    shift
fi

setlock $lockfile
if [ $? -ne 0 ]; then
    if [ "$warnlock" ]; then
        echo "- INFO($$) `date`: lockfile $lockfile already exist"
    fi
    exit 0
fi

logfilesize=0
[ -f $logfile ] && logfilesize=`ls -l $logfile | awk '{print $5}'`

{
echo "- START($$) `date`"
# TODO: check sh -c possibility
tstart=`date '+%s'`
eval $@
ret=$?
tend=`date '+%s'`
tdelta=$(($tend-$tstart))
echo "- STOP($$): `date` duration $tdelta sec. Exit code $ret"
} >> $logfile 2>&1

case $ret in
0)
    ;;
14)
    ;;
*)
    echo "`date` ERROR($$): exit code $ret";
    dd if=$logfile bs=1 skip=$logfilesize 2>/dev/null | tail -n 100 
    ;;
esac

rmlock $lockfile

exit $ret

